/**
 * By : Abhinav Kumar
 */

use('emp');

data=[{
title : "Fight Club",
writer : "ChuckPalahniuko",
year : 1999,
actors : [
"Brad Pitt",
"Edward Norton"
]},{
title : "Pulp Fiction",
writer : "Quentin Tarantino",
year : 1994,
actors : [
"John Travolta",
"Uma",
"Thurman"
]},{
title : "Inglorious Basterds",
writer : "Quentin Tarantino",
year : 2009,
actors : [
"Brad Pitt",
"Diane",
"Kruger Eli",
"Roth"
]}
,{
title : "The Hobbit: An Unexpected Journey",
writer : "J.R.R. Tolkein",
year : 2012,
franchise : "The Hobbit"
},{
title : "The Hobbit: The Desolation of Smaug",
writer : "J.R.R. Tolkein",
year : 2013,
franchise : "The Hobbit"
},{
title : "The Hobbit: The Battle of the Five Armies",
writer : "J.R.R. Tolkein",
year : 2012,
franchise : "The Hobbit",
synopsis : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness."
},
{
title : "Pee Wee Herman's BigAdventure"},
{
title : "Avatar"
}
]

//creating a new collection
db.films.insertMany(data);

// query the movies collection to
// 1. get all documents
db.films.find({}).pretty();

// 2. get all documents with writer set to "Quentin Tarantino";
db.films.find({writer : "Quentin Tarantino"}).pretty();

// 3. get all documents where actors include "Brad Pitt";
db.films.find({actors : "Brad Pitt"}).pretty();

// 4. get all documents with franchise set to "The Hobbit"
db.films.find({franchise : "The Hobbit"}).pretty();

// 5. get all movies released in the 90s
db.films.find({year : {$gt : 1989, $lt : 2000}}).pretty();

// 6. get all movies released before the year 2000 or after 2010
db.films.find({$or : [{year : {$lt : 2000}}, {year : {$gt : 2010}}]}).pretty();

// // Update Documents
// 1. add a synopsis to "The Hobbit: An Unexpected Journey" : "A reluctant
// hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of
// dwarves to reclaim their mountain home - and the gold within it - from the
// dragon Smaug."
db.films.updateOne({title:"The Hobbit: An Unexpected Journey"},{
/**
 * field: The field name
 * expression: The expression.
 */
$set: {
  synopsis: "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."
}})

// 2. add a synopsis to "The Hobbit: The Desolation of Smaug" : "The dwarves,
// along with Bilbo Baggins and Gandalf the Grey, continue their quest to
// reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of
// a mysterious and magical ring."
db.films.updateOne({title:"The Hobbit: The Desolation of Smaug"},{
/**
 * field: The field name
 * expression: The expression.
 */
$set: {
  synopsis: "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."
}})

// 3. add an actor named "Samuel L. Jackson" to the movie "Pulp Fiction";
db.films.updateOne({title:"Pulp Fiction"},{
/**
 * field: The field name
 * expression: The expression.
 */
$push: {
  actors: "Samuel L. Jackson"
}})

// Text Search
// 1. find all movies that have a synopsis that contains the word "Bilbo";
db.films.find({synopsis : /Bilbo/}).pretty();

// 2. find all movies that have a synopsis that contains the word "Gandalf";
db.films.find({synopsis : /Gandalf/}).pretty();

// 3. find all movies that have a synopsis that contains the word "Bilbo" and not the word"Gandalf";
db.films.find({synopsis : /Bilbo/, synopsis : {$not : /Gandalf/}}).pretty();

// 4. find all movies that have a synopsis that contains the word "dwarves" or "hobbit";
db.films.find({synopsis : /dwarves/, synopsis : /hobbit/}).pretty();

// 5. find all movies that have a synopsis that contains the word "gold" and "dragon";
db.films.find({synopsis : /gold/, synopsis : /dragon/}).pretty();